name: continue-on-error Website Deployment
on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      source_ami:
       description: 'Source AMI ID'
       required: true
       default: 'ami-054d3ba7b0317b198'
      ami_name:
       description: 'The name of the AMI to build'
       required: true
       default: 'Exelixis-AMI-Ubuntu-22.04'
    
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:

    
      - if: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'push'}}
        name: Test inputs on push event
        run: |
          echo "source_ami=${{ inputs.source_ami }}" >> $GITHUB_ENV
          echo "ami_name=${{ inputs.ami_name }}" >> $GITHUB_ENV
      - name: print env variables
        run: |
          echo "source_ami=${{env.source_ami}}
          echo "ami_name=${{env.ami_name}}
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Test code
        continue-on-error: true
        id: run-tests
        run: npm run test
      - name: Upload test report
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build website
        id: build-website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Output contents
        run: ls
      - name: Deploy
        run: echo "Deploying..."

  report:
    needs: [lint, test]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        run: |
          echo "Something went wrong"
          echo ${{github}}
